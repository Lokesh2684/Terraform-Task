name: 'Terraform'

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Terraform/**'
  pull_request:
    paths:
      - 'Terraform/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: Terraform

    steps:
      - name:  Checkout Repository
        uses: actions/checkout@v4

      - name:  Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name:  Setup Terraform CLI
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name:  Terraform Init with Backend Config
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}"

      - name:  Terraform Plan
        run: terraform plan -var-file="dev.tfvars"

      - name:  Terraform Apply
        run: terraform apply -var-file="dev.tfvars" -auto-approve
